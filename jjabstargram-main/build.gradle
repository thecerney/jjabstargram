plugins {
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'war'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    war {
        archiveName = 'ROOT.war'
    }

    eclipse {
        classpath {
            containers 'org.jetbrains.kotlin.core.KOTLIN_CONTAINER'
        }
    }

    dependencyManagement {
        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
    }

    // logback condition
    implementation 'org.codehaus.janino:janino'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk11"

    //google gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    //apache httpclient - for restTemplate
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
}

test {
    useJUnitPlatform()
}
